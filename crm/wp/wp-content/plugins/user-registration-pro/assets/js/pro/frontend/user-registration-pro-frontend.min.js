"use strict";
! function(n) {
    n(document).ready(function() {
        user_registration_pro_frontend_data.has_create_user_capability && user_registration_pro_frontend_data.is_user_logged_in ? n(document).find(".user-registration-modal-link").show() : !user_registration_pro_frontend_data.has_create_user_capability && user_registration_pro_frontend_data.is_user_logged_in && n(document).find(".user-registration-modal-link").hide()
    }), n(document).on("hover", ".user-registration-modal-link", function(e) {
        n(".user-registration-modal-link").css("cursor", "pointer")
    }), n(document).on("click", ".user-registration-modal-link", function(e) {
        e.preventDefault();
        n.map(n(this)[0].classList, function(e, t) {
            0 === e.indexOf("user-registration-modal-link-") && (e = e.replace("user-registration-modal-link-", ""), n(".user-registration-modal-" + e).each(function() {
                0 === n(this).parents(".entry-content").length && n(this).show()
            }), n(document.body).addClass("user-registration-modal-open"))
        })
    }), n(".ur-frontend-form.login").on("submit", function() {
        n(this).closest(".user-registration-modal").length ? n.map(n(this).closest(".user-registration-modal")[0].classList, function(e, t) {
            var r;
            0 === e.indexOf("user-registration-modal-") && (r = e.replace("user-registration-modal-", ""), (e = {}).popup_id = r, n(".user-registration-modal-" + r).closest(".entry-content").length ? e.inner_popup = !0 : e.inner_popup = !1, localStorage.setItem("ur_pro_popup", JSON.stringify(e)))
        }) : localStorage.removeItem("ur_pro_popup")
    }), n(".user-registration-modal").ready(function() {
        n(".entry-content").find(".user-registration-modal").length && n(document.body).addClass("user-registration-modal-open");
        var e, t, r = JSON.parse(localStorage.getItem("ur_pro_popup"));
        r && r.popup_id && (e = r.popup_id, t = n(".user-registration-modal-" + e), n(".entry-content").find(".ur-frontend-form.login").length ? n(".entry-content").find(".ur-frontend-form.login").each(function() {
            n(this).closest("body").find(".entry-content .user-registration-error").length && ((!0 === r.inner_popup ? n(this).closest("body").find(".entry-content") : n(this).closest(".user-registration")).find(".user-registration-error").prependTo(t.find(".user-registration")), n(this).closest("body").find(".user-registration-modal").hide(), t.show())
        }) : n(".user-registration-modal").find(".ur-frontend-form.login").each(function() {
            n(this).siblings(".user-registration-error").length && n(this).closest(".user-registration").find(".user-registration-error").prependTo(t.find(".user-registration")), n(this).closest("body").find(".user-registration-modal").hide(), t.show()
        }), localStorage.removeItem("ur_pro_popup"), n(document.body).addClass("user-registration-modal-open")), n(".user-registration-modal").find(".ur-frontend-form.login").each(function() {
            var e;
            0 < n(this).find("#ur-recaptcha-node").length && (e = n(this).closest(".user-registration-modal").attr("class").split(" ")[1].replace("user-registration-modal-", ""), n(this).find("#node_recaptcha_login").attr("id", "node_recaptcha_login_popup_" + e))
        })
    }), n(document).on("click", ".user-registration-modal__close-icon, .user-registration-modal__backdrop", function() {
        n(this).closest(".user-registration-modal").css({
            display: "none",
            opacity: "1"
        }), n(document.body).removeClass("user-registration-modal-open")
    }), n(document).on("click", ".user-registration-MyAccount-navigation-link--delete-account", function() {
        var o = user_registration_pro_frontend_data.delete_account_option,
            e = '<span class="user-registration-swal2-modal__title">' + user_registration_pro_frontend_data.delete_account_popup_title;
        return swal.fire({
            title: e,
            html: user_registration_pro_frontend_data.delete_account_popup_html,
            confirmButtonText: user_registration_pro_frontend_data.delete_account_button_text,
            confirmButtonColor: "#FF4149",
            showConfirmButton: !0,
            showCancelButton: !0,
            cancelButtonText: user_registration_pro_frontend_data.cancel_button_text,
            customClass: {
                container: "user-registration-swal2-container"
            },
            focusConfirm: !1,
            showLoaderOnConfirm: !0,
            preConfirm: function() {
                return new Promise(function(e) {
                    var t, r = "";
                    "prompt_password" === o ? (t = Swal.getPopup().querySelector("#password").value) ? r = {
                        action: "user_registration_pro_delete_account",
                        password: t
                    } : (Swal.showValidationMessage(user_registration_pro_frontend_data.please_enter_password), Swal.hideLoading(), n(".swal2-actions").find("button").prop("disabled", !1)) : r = {
                        action: "user_registration_pro_delete_account"
                    }, "" !== r && n.ajax({
                        url: user_registration_pro_frontend_data.ajax_url,
                        method: "POST",
                        data: r
                    }).done(function(e) {
                        e.success ? Swal.fire({
                            icon: "success",
                            title: user_registration_pro_frontend_data.account_deleted_message,
                            customClass: "user-registration-swal2-modal user-registration-swal2-modal--center",
                            showConfirmButton: !1,
                            timer: 1e3
                        }).then(function(e) {
                            window.location.reload()
                        }) : (Swal.showValidationMessage(e.data.message), Swal.hideLoading(), n(".swal2-actions").find("button").prop("disabled", !1))
                    })
                })
            }
        }), !1
    }), n(document).on("click", ".ur-reset-button", function(e) {
        e.preventDefault(), Swal.fire({
            html: user_registration_pro_frontend_data.clear_button_text,
            icon: "warning",
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes",
            allowOutsideClick: !1,
            showCancelButton: !0,
            customClass: {
                container: "user-registration-swal2-container"
            }
        }).then(e => {
            !0 === e.value && (n(document).trigger("user_registration_frontend_reset_button"), n(".ur-field-item.field-select2 select").val(null).trigger("change"), n(".ur-field-item.field-multi_select2 select").val(null).trigger("change"), n(".ur-frontend-form").find("form.register").validate().resetForm(), n(".user-registration-error").remove(), n(".ur-frontend-form").find("form.register").trigger("reset"))
        })
    }), n(document).on("click", ".user-registartion-force-logout", function(e) {
        e.preventDefault();
        var t = n(".user-registartion-force-logout").data("user-id"),
            e = n(".user-registartion-force-logout").data("email");
        n.ajax({
            type: "POST",
            url: user_registration_pro_frontend_data.ajax_url,
            data: {
                action: "user_registration_pro_send_email_logout",
                user_email: e,
                user_id: t
            },
            success: function(e) {
                n("#user-registration").find(".user-registration-error").remove(), n("#user-registration").prepend('<ul class="user-registration-message">Email has been Sent Succesfully</ul>')
            }
        })
    })
}(jQuery);

jQuery(".user-registration-EditProfileForm input[name='user_registration_user_email'], .user-registration-EditProfileForm input[name='user_registration_contact_number'], .user-registration-EditProfileForm input[name='user_registration_user_login']").prop('readonly', true);
jQuery(".user-registration-EditProfileForm input[name='user_registration_user_email'], .user-registration-EditProfileForm input[name='user_registration_contact_number'], .user-registration-EditProfileForm input[name='user_registration_user_login']").css('background-color', '#dfdddd');